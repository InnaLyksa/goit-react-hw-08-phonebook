{"version":3,"file":"static/js/685.4a72edee.chunk.js","mappings":"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","sources":["images/icons/phone.svg","pages/Contacts/Contacts.styled.js","components/ModalAddContact/ModalAddContact.styled.js","redux/contacts/contactsSelectors.js","components/ModalAddContact/ContactForm.styled.js","components/ModalAddContact/ModalAddContact.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ColtactList.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPhone(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#000000\",\n    width: \"800px\",\n    height: \"800px\",\n    viewBox: \"0 0 32 32\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"phone1\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.331 19.76c-0.026-0.018-3.034-5.075-3.044-5.14-0.622-1.359-1.124-2.749-0.078-3.366l-4.341-7.32c-1.125 0.841-4.307 5.405 1.649 15.748 6.274 10.9 12.245 10.447 13.442 9.709l-4.23-7.145c-1 0.588-1.842-0.381-3.398-2.486zM25.862 26.617l0.001-0.006c0 0-3.303-5.566-3.305-5.568-0.262-0.441-0.825-0.58-1.264-0.324l-2.024 1.197 4.242 7.166c0 0 2.024-1.191 2.023-1.195h0.004c0.465-0.276 0.572-0.846 0.323-1.27zM14.786 9.736v-0.004c0.465-0.275 0.574-0.845 0.325-1.265l0.002-0.006c0 0-3.398-5.729-3.4-5.73-0.261-0.443-0.826-0.58-1.263-0.324l-2.024 1.197 4.336 7.324c0 0 2.023-1.189 2.024-1.192z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPhone);\nexport default __webpack_public_path__ + \"static/media/phone.f56376aaab5585b300053d56e5cc60e8.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nexport const Wrapper = styled.div`\n  padding-top: 40px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.2);\n`;\n\nexport const Modal = styled.div`\n  z-index: 100;\n  position: absolute;\n  top: 55%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  min-height: 300px;\n  max-width: 400px;\n  width: 100%;\n\n  border-radius: 4px;\n  box-shadow: 3px 2px 1px 1px rgba(0, 0, 0, 0.3),\n    2px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectFilterValue = state => state.filter.value;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filterValue) => {\n    // console.log('111!');\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue)\n    );\n  }\n);\n","import { ErrorMessage, Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormAddContact = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 30px;\n`;\n\nexport const LabelContactForm = styled.label`\n  font-size: 28px;\n  font-weight: bold;\n  margin-bottom: 10px;\n`;\n\nexport const InputContactForm = styled(Field)`\n  width: 300px;\n  padding: 8px;\n  font-size: 24px;\n  margin-bottom: 10px;\n  border-radius: 4px;\n  border: 2px solid green;\n  box-shadow: 4px 4px 8px 0px rgb(23 24 23 / 20%);\n`;\n\nexport const BtnWrap = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-top: 10px;\n`;\n\nexport const MessageError = styled(ErrorMessage)`\n  color: red;\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport * as yup from 'yup';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\n\nimport { Overlay, Modal } from './ModalAddContact.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactOperations';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { Formik } from 'formik';\nimport { nanoid } from 'nanoid';\nimport { Warn, Success, Error } from '../../components/utils/notification';\nimport {\n  FormAddContact,\n  LabelContactForm,\n  InputContactForm,\n  MessageError,\n  BtnWrap,\n} from './ContactForm.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\nconst nameInputId = nanoid();\nconst numberInputId = nanoid();\n\nconst numberRegEx =\n  /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/;\nconst nameRegEx = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(nameRegEx, {\n      message:\n        'Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d`Artagnan',\n      excludeEmptyString: false,\n    })\n    .required('Name is required field!'),\n  number: yup\n    .string()\n    .matches(numberRegEx, {\n      message:\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n      excludeEmptyString: false,\n    })\n    .required('Number is required field!'),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst AddContactModal = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const allContacts = useSelector(selectContacts);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const isDublicateName = allContacts.find(\n      ({ name }) => name.toLowerCase() === values.name.toLowerCase()\n    );\n    const isDublicateNumber = allContacts.find(\n      ({ number }) => number === values.number\n    );\n    if (isDublicateName) {\n      return Warn(values.name);\n    } else {\n      if (isDublicateNumber) {\n        return Warn(values.number);\n      }\n    }\n    console.log(values);\n    try {\n      dispatch(addContact(values));\n      Success(values.name, 'is added to');\n      resetForm();\n      onClose();\n    } catch (error) {\n      Error();\n      // console.log(`${error.message}`);\n    }\n  };\n\n  const handleEsc = event => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleEsc);\n    switchScrollBody('hidden');\n    return () => {\n      window.removeEventListener('keydown', handleEsc);\n      switchScrollBody('scroll');\n    };\n  });\n\n  const handleBackDrop = event => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  const switchScrollBody = state => {\n    Object.assign(document.body.style, {\n      overflowY: state,\n    });\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackDrop}>\n      <Modal>\n        <Box\n          color=\"inherit\"\n          sx={{\n            width: '100%',\n            padding: 2,\n            minHeight: 300,\n            bgcolor: 'background.paper',\n            color: 'text.primary',\n            display: 'flex',\n            gap: 2,\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Formik\n            initialValues={initialValues}\n            onSubmit={handleSubmit}\n            validationSchema={schema}\n          >\n            <FormAddContact autoComplete=\"off\">\n              <LabelContactForm htmlFor={nameInputId}> Name:</LabelContactForm>\n              <InputContactForm type=\"text\" name=\"name\" id={nameInputId} />\n              <MessageError name=\"name\" component=\"div\" />\n\n              <LabelContactForm htmlFor={numberInputId}>\n                Number:\n              </LabelContactForm>\n              <InputContactForm id={numberInputId} type=\"tel\" name=\"number\" />\n              <MessageError name=\"number\" component=\"div\" />\n              <BtnWrap>\n                <Button\n                  variant=\"contained\"\n                  type=\"submit\"\n                  sx={{\n                    bgcolor: '#4caf50',\n                    color: 'text.primary',\n                  }}\n                >\n                  Add contact\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  onClick={onClose}\n                  sx={{\n                    ml: 2,\n                    bgcolor: 'background.button',\n                    color: 'text.primary',\n                  }}\n                >\n                  Cancel\n                </Button>\n              </BtnWrap>\n            </FormAddContact>\n          </Formik>\n        </Box>\n      </Modal>\n    </Overlay>,\n    modalRoot\n  );\n};\n\nexport default AddContactModal;\n","import styled from 'styled-components';\n\nexport const ContactListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  /* width: 400px; */\n\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\n// export const ContactText = styled.span`\n//   font-size: 24px;\n\n//   &::before {\n//     content: '✔️';\n//     margin-right: 5px;\n//     font-size: 24px;\n//   }\n// `;\n\nexport const ContactText = styled.a`\n  font-size: 20px;\n  text-decoration: none;\n  color: inherit;\n  display: flex;\n  align-items: center;\n\n  & > svg {\n    margin-right: 5px;\n    /* font-size: 24px; */\n    width: 30px;\n    height: 30px;\n    fill: #086908;\n  }\n`;\nexport const DeleteBtn = styled.button`\n  padding: 8px 10px;\n  margin-left: 4px;\n  font-size: 16px;\n  font-weight: bold;\n  background: #f7a9a3;\n  color: black;\n  border: 1px solid black;\n  border-radius: 4px;\n  box-shadow: 4px 4px 8px 0px rgb(23 24 23 / 20%);\n  cursor: pointer;\n`;\n","import PropTypes from 'prop-types';\nimport { ReactComponent as Phone } from '../../images/icons/phone.svg';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactOperations';\nimport Button from '@mui/material/Button';\nimport { Success } from '../../components/utils/notification';\nimport { ContactListItem, ContactText } from './ContactItem.styled';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDeleteContact = () => {\n    dispatch(deleteContact(id));\n    Success(name, 'is deleted from ');\n  };\n\n  return (\n    <ContactListItem>\n      <ContactText href={`tel:${number}`}>\n        <Phone />\n        {name}: {number}\n      </ContactText>\n      <Button\n        variant=\"contained\"\n        onClick={handleDeleteContact}\n        sx={{\n          ml: 2,\n          bgcolor: 'background.button',\n          color: 'text.primary',\n        }}\n      >\n        Delete\n      </Button>\n    </ContactListItem>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul``;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  selectFilteredContacts,\n  selectIsLoading,\n} from 'redux/contacts/contactsSelectors';\n\nimport { fetchContacts } from 'redux/contacts/contactOperations';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { Loader } from '../Loader/Loader';\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <List>\n        {filteredContacts.map(({ id, name, number }) => (\n          <ContactItem key={id} id={id} name={name} number={number} />\n        ))}\n      </List>\n    </>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport { selectFilterValue } from 'redux/contacts/contactsSelectors';\nimport TextField from '@mui/material/TextField';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilterValue);\n  const dispatch = useDispatch(changeFilter);\n\n  const handleFilterChange = e => {\n    dispatch(changeFilter(e.currentTarget.value));\n  };\n  return (\n    <TextField\n      id=\"logFilter\"\n      label=\"Find contact by name\"\n      name=\"filter\"\n      value={filter}\n      onChange={handleFilterChange}\n      sx={{ width: 350, marginBottom: 3 }}\n      size=\"small\"\n    />\n  );\n};\n","import React from 'react';\nimport { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport { Wrapper } from './Contacts.styled';\nimport AddContactModal from '../../components/ModalAddContact/ModalAddContact';\n\nimport { ContactList } from 'components/ContactList/ColtactList';\nimport { Filter } from 'components/Filter/Filter';\n\nfunction Contacts() {\n  const [showAddingModal, setShowAddingModal] = useState(false);\n\n  const toggleAddingModal = () => {\n    setShowAddingModal(!showAddingModal);\n  };\n  return (\n    <Wrapper>\n      <Filter />\n      <Stack direction=\"row\" sx={{ marginBottom: 2, gap: 4 }}>\n        <Typography variant=\"h4\">Contacts</Typography>\n\n        <Button\n          variant=\"contained\"\n          endIcon={<AddCircleOutlineIcon />}\n          onClick={toggleAddingModal}\n          sx={{\n            bgcolor: 'btnGreen',\n            color: 'text.primary',\n          }}\n        >\n          Add new contact\n        </Button>\n      </Stack>\n      <ContactList />\n      {showAddingModal && <AddContactModal onClose={toggleAddingModal} />}\n    </Wrapper>\n  );\n}\n\nexport default Contacts;\n"],"names":["_path","Wrapper","styled","Overlay","Modal","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilterValue","filter","value","selectFilteredContacts","createSelector","filterValue","contact","name","toLowerCase","includes","FormAddContact","Form","LabelContactForm","InputContactForm","Field","BtnWrap","MessageError","ErrorMessage","modalRoot","document","querySelector","nameInputId","nanoid","numberInputId","schema","yup","shape","matches","message","excludeEmptyString","required","number","initialValues","onClose","dispatch","useDispatch","allContacts","useSelector","handleEsc","event","code","useEffect","window","addEventListener","switchScrollBody","removeEventListener","Object","assign","body","style","overflowY","createPortal","onClick","target","currentTarget","Box","color","sx","width","padding","minHeight","bgcolor","display","gap","flexDirection","alignItems","justifyContent","onSubmit","values","resetForm","isDublicateName","find","isDublicateNumber","Warn","console","log","addContact","Success","error","Error","validationSchema","autoComplete","htmlFor","type","id","component","Button","variant","ml","_excluded","_extends","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgPhone","_ref","svgRef","title","titleId","props","fill","height","viewBox","xmlns","ref","undefined","d","ForwardRef","ContactListItem","ContactText","ContactItem","href","deleteContact","List","ContactList","filteredContacts","fetchContacts","Loader","map","Filter","changeFilter","TextField","label","onChange","e","marginBottom","size","useState","showAddingModal","setShowAddingModal","toggleAddingModal","Stack","direction","Typography","endIcon","AddCircleOutline"],"sourceRoot":""}